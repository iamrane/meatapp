{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/iamrane/Private/meatapp/components/SearchResult.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-apollo\";\nimport { useField } from \"formik\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport uniqBy from \"lodash/uniqBy\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { getMeatsQuery } from \"gql\";\n\nvar SearchResult = function SearchResult(props) {\n  var _useField = useField(\"searchString\"),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var meatName = meta.value;\n\n  var _useQuery = useQuery(getMeatsQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (meatName.length < 2 || loading) {\n    return null;\n  }\n\n  var filterName = data.allMeats.filter(function (meat) {\n    return meat.meatName.toLowerCase().includes(meatName.toLowerCase());\n  });\n  var filterTags = data.allMeats.filter(function (meat) {\n    return meat.meatGroup.toLowerCase().includes(meatName.toLowerCase());\n  });\n  var result = uniqBy([].concat(_toConsumableArray(filterName), _toConsumableArray(filterTags)), \"meatName\");\n\n  if (isEmpty(result)) {\n    return null;\n  }\n\n  return __jsx(motion.div, {\n    transition: {\n      staggerChildren: 0.1,\n      delayChildren: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, result.map(function (meat) {\n    console.log(\"meat\", meat);\n    return __jsx(motion.div, {\n      className: \"my-4 bg-white rounded overflow-hidden shadow-lg\",\n      key: meat.meatName,\n      initial: {\n        y: 50,\n        opacity: 0\n      },\n      animate: {\n        y: 0,\n        opacity: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"px-6 py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"font-bold text-xl mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", meat.meatName), __jsx(\"p\", {\n      className: \"text-gray-700 text-base\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, meat.shortDescription)), __jsx(\"div\", {\n      className: \"px-6 py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"#photography\"), __jsx(\"span\", {\n      className: \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"#travel\"), __jsx(\"span\", {\n      className: \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"#winter\")));\n  }));\n};\n\nSearchResult.propTypes = {};\nexport default SearchResult;","map":{"version":3,"sources":["/Users/iamrane/Private/meatapp/components/SearchResult.js"],"names":["React","PropTypes","useQuery","useField","motion","AnimatePresence","uniqBy","isEmpty","getMeatsQuery","SearchResult","props","field","meta","meatName","value","data","loading","length","filterName","allMeats","filter","meat","toLowerCase","includes","filterTags","meatGroup","result","staggerChildren","delayChildren","map","console","log","y","opacity","shortDescription","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-apollo\";\nimport { useField } from \"formik\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport uniqBy from \"lodash/uniqBy\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { getMeatsQuery } from \"gql\";\n\nconst SearchResult = props => {\n  const [field, meta] = useField(\"searchString\");\n  const { value: meatName } = meta;\n  const { data, loading } = useQuery(getMeatsQuery);\n\n  if (meatName.length < 2 || loading) {\n    return null;\n  }\n\n  const filterName = data.allMeats.filter(meat =>\n    meat.meatName.toLowerCase().includes(meatName.toLowerCase())\n  );\n\n  const filterTags = data.allMeats.filter(meat =>\n    meat.meatGroup.toLowerCase().includes(meatName.toLowerCase())\n  );\n\n  const result = uniqBy([...filterName, ...filterTags], \"meatName\");\n\n  if (isEmpty(result)) {\n    return null;\n  }\n\n  return (\n    <motion.div transition={{ staggerChildren: 0.1, delayChildren: 0.5 }}>\n      {result.map(meat => {\n        console.log(\"meat\", meat);\n        return (\n          <motion.div\n            className=\"my-4 bg-white rounded overflow-hidden shadow-lg\"\n            key={meat.meatName}\n            initial={{ y: 50, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n          >\n            <div className=\"px-6 py-4\">\n              <div className=\"font-bold text-xl mb-2\"> {meat.meatName}</div>\n              <p className=\"text-gray-700 text-base\">{meat.shortDescription}</p>\n            </div>\n            <div className=\"px-6 py-4\">\n              <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n                #photography\n              </span>\n              <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n                #travel\n              </span>\n              <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">\n                #winter\n              </span>\n            </div>\n          </motion.div>\n        );\n      })}\n    </motion.div>\n  );\n};\n\nSearchResult.propTypes = {};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}