{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport withApollo from 'next-with-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch'; // Update the GraphQL endpoint to any instance of GraphQL that you like\n\nvar GRAPHQL_URL = 'https://api.graph.cool/simple/v1/cjoxcaxuqatsg0114qqrvdr7j';\nvar link = createHttpLink({\n  fetch: fetch,\n  // Switches between unfetch & node-fetch for client & server.\n  uri: GRAPHQL_URL\n}); // Export a HOC from next-with-apollo\n// Docs: https://www.npmjs.com/package/next-with-apollo\n\nexport default withApollo( // You can get headers and ctx (context) from the callback params\n// e.g. ({ headers, ctx, initialState })\nfunction (_ref) {\n  var initialState = _ref.initialState;\n  return new ApolloClient({\n    link: link,\n    cache: new InMemoryCache() //  rehydrate the cache using the initial data passed from the server:\n    .restore(initialState || {})\n  });\n});","map":{"version":3,"sources":["/Users/iamrane/Private/meatapp/utils/apollo-client.js"],"names":["ApolloClient","InMemoryCache","withApollo","createHttpLink","fetch","GRAPHQL_URL","link","uri","initialState","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,IAAMC,WAAW,GAAG,4DAApB;AAEA,IAAMC,IAAI,GAAGH,cAAc,CAAC;AAC3BC,EAAAA,KAAK,EAALA,KAD2B;AACpB;AACPG,EAAAA,GAAG,EAAEF;AAFsB,CAAD,CAA3B,C,CAKA;AACA;;AACA,eAAeH,UAAU,EACxB;AACA;AACA;AAAA,MAAGM,YAAH,QAAGA,YAAH;AAAA,SACC,IAAIR,YAAJ,CAAiB;AAChBM,IAAAA,IAAI,EAAJA,IADgB;AAEhBG,IAAAA,KAAK,EAAE,IAAIR,aAAJ,GACN;AADM,KAELS,OAFK,CAEGF,YAAY,IAAI,EAFnB;AAFS,GAAjB,CADD;AAAA,CAHwB,CAAzB","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport withApollo from 'next-with-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\n\n// Update the GraphQL endpoint to any instance of GraphQL that you like\nconst GRAPHQL_URL = 'https://api.graph.cool/simple/v1/cjoxcaxuqatsg0114qqrvdr7j';\n\nconst link = createHttpLink({\n\tfetch, // Switches between unfetch & node-fetch for client & server.\n\turi: GRAPHQL_URL,\n});\n\n// Export a HOC from next-with-apollo\n// Docs: https://www.npmjs.com/package/next-with-apollo\nexport default withApollo(\n\t// You can get headers and ctx (context) from the callback params\n\t// e.g. ({ headers, ctx, initialState })\n\t({ initialState }) =>\n\t\tnew ApolloClient({\n\t\t\tlink,\n\t\t\tcache: new InMemoryCache()\n\t\t\t\t//  rehydrate the cache using the initial data passed from the server:\n\t\t\t\t.restore(initialState || {}),\n\t\t})\n);\n"]},"metadata":{},"sourceType":"module"}