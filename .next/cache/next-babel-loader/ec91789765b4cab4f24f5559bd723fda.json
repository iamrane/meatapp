{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/iamrane/Private/meatapp/components/SearchResult.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useField } from 'formik';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport uniqBy from 'lodash/uniqBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { getMeatsQuery } from 'gql';\nimport SearchResultItem from 'components/SearchResultItem';\nvar variants = {\n  initial: {},\n  reveal: {\n    transition: {\n      staggerChildren: 0.05\n    }\n  }\n};\n\nvar SearchResult = function SearchResult(props) {\n  var _useState = useState(),\n      activeMeatId = _useState[0],\n      setActiveMeatId = _useState[1];\n\n  var _useField = useField('searchString'),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var meatName = meta.value;\n\n  var _useQuery = useQuery(getMeatsQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  console.log('data', data);\n\n  if (meatName.length < 3 || loading) {\n    return null;\n  }\n\n  var _data$meats = data.meats,\n      meats = _data$meats === void 0 ? [] : _data$meats;\n  var filterName = meats.filter(function (meat) {\n    return meat.meatName.toLowerCase().includes(meatName.toLowerCase());\n  });\n  var filterTags = meats.filter(function (meat) {\n    return meat.tags.toLowerCase().includes(meatName.toLowerCase());\n  });\n  var result = uniqBy([].concat(_toConsumableArray(filterName), _toConsumableArray(filterTags)), 'meatName');\n\n  if (isEmpty(result)) {\n    return null;\n  }\n\n  function handleMeatClick(id) {\n    return function (event) {\n      setActiveMeatId(id);\n    };\n  }\n\n  return __jsx(motion.div, {\n    variants: variants,\n    initial: \"initial\",\n    animate: \"reveal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, result.map(function (meat) {\n    return __jsx(SearchResultItem, {\n      key: meat.id,\n      meat: meat,\n      open: activeMeatId === meat.id,\n      onClick: handleMeatClick(meat.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }));\n};\n\nSearchResult.propTypes = {};\nexport default SearchResult;","map":{"version":3,"sources":["/Users/iamrane/Private/meatapp/components/SearchResult.js"],"names":["React","useState","PropTypes","useQuery","useField","motion","AnimatePresence","uniqBy","isEmpty","getMeatsQuery","SearchResultItem","variants","initial","reveal","transition","staggerChildren","SearchResult","props","activeMeatId","setActiveMeatId","field","meta","meatName","value","data","loading","console","log","length","meats","filterName","filter","meat","toLowerCase","includes","filterTags","tags","result","handleMeatClick","id","event","map","propTypes"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,aAAT,QAA8B,KAA9B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AAEA,IAAMC,QAAQ,GAAG;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB;AADL;AAFQ,CAAjB;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACWhB,QAAQ,EADnB;AAAA,MACtBiB,YADsB;AAAA,MACRC,eADQ;;AAAA,kBAEPf,QAAQ,CAAC,cAAD,CAFD;AAAA;AAAA,MAEtBgB,KAFsB;AAAA,MAEfC,IAFe;;AAAA,MAGdC,QAHc,GAGDD,IAHC,CAGrBE,KAHqB;;AAAA,kBAIHpB,QAAQ,CAACM,aAAD,CAJL;AAAA,MAIrBe,IAJqB,aAIrBA,IAJqB;AAAA,MAIfC,OAJe,aAIfA,OAJe;;AAM7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;;AAEA,MAAIF,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IAAuBH,OAA3B,EAAoC;AACnC,WAAO,IAAP;AACA;;AAV4B,oBAYND,IAZM,CAYrBK,KAZqB;AAAA,MAYrBA,KAZqB,4BAYb,EAZa;AAa7B,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACV,QAAL,CAAcW,WAAd,GAA4BC,QAA5B,CAAqCZ,QAAQ,CAACW,WAAT,EAArC,CAAJ;AAAA,GAAjB,CAAnB;AACA,MAAME,UAAU,GAAGN,KAAK,CAACE,MAAN,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACI,IAAL,CAAUH,WAAV,GAAwBC,QAAxB,CAAiCZ,QAAQ,CAACW,WAAT,EAAjC,CAAJ;AAAA,GAAjB,CAAnB;AACA,MAAMI,MAAM,GAAG9B,MAAM,8BAAKuB,UAAL,sBAAoBK,UAApB,IAAiC,UAAjC,CAArB;;AAEA,MAAI3B,OAAO,CAAC6B,MAAD,CAAX,EAAqB;AACpB,WAAO,IAAP;AACA;;AAED,WAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAC5B,WAAO,UAAAC,KAAK,EAAI;AACfrB,MAAAA,eAAe,CAACoB,EAAD,CAAf;AACA,KAFD;AAGA;;AAED,SACC,MAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,QAAQ,EAAE5B,QAAtB;AAAgC,IAAA,OAAO,EAAC,SAAxC;AAAkD,IAAA,OAAO,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE0B,MAAM,CAACI,GAAP,CAAW,UAAAT,IAAI,EAAI;AACnB,WACC,MAAC,gBAAD;AACC,MAAA,GAAG,EAAEA,IAAI,CAACO,EADX;AAEC,MAAA,IAAI,EAAEP,IAFP;AAGC,MAAA,IAAI,EAAEd,YAAY,KAAKc,IAAI,CAACO,EAH7B;AAIC,MAAA,OAAO,EAAED,eAAe,CAACN,IAAI,CAACO,EAAN,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAQA,GATA,CADF,CADD;AAcA,CAzCD;;AA2CAvB,YAAY,CAAC0B,SAAb,GAAyB,EAAzB;AAEA,eAAe1B,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useField } from 'formik';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport uniqBy from 'lodash/uniqBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { getMeatsQuery } from 'gql';\nimport SearchResultItem from 'components/SearchResultItem';\n\nconst variants = {\n\tinitial: {},\n\treveal: {\n\t\ttransition: { staggerChildren: 0.05 },\n\t},\n};\n\nconst SearchResult = props => {\n\tconst [activeMeatId, setActiveMeatId] = useState();\n\tconst [field, meta] = useField('searchString');\n\tconst { value: meatName } = meta;\n\tconst { data, loading } = useQuery(getMeatsQuery);\n\n\tconsole.log('data', data);\n\n\tif (meatName.length < 3 || loading) {\n\t\treturn null;\n\t}\n\n\tconst { meats = [] } = data;\n\tconst filterName = meats.filter(meat => meat.meatName.toLowerCase().includes(meatName.toLowerCase()));\n\tconst filterTags = meats.filter(meat => meat.tags.toLowerCase().includes(meatName.toLowerCase()));\n\tconst result = uniqBy([...filterName, ...filterTags], 'meatName');\n\n\tif (isEmpty(result)) {\n\t\treturn null;\n\t}\n\n\tfunction handleMeatClick(id) {\n\t\treturn event => {\n\t\t\tsetActiveMeatId(id);\n\t\t};\n\t}\n\n\treturn (\n\t\t<motion.div variants={variants} initial=\"initial\" animate=\"reveal\">\n\t\t\t{result.map(meat => {\n\t\t\t\treturn (\n\t\t\t\t\t<SearchResultItem\n\t\t\t\t\t\tkey={meat.id}\n\t\t\t\t\t\tmeat={meat}\n\t\t\t\t\t\topen={activeMeatId === meat.id}\n\t\t\t\t\t\tonClick={handleMeatClick(meat.id)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</motion.div>\n\t);\n};\n\nSearchResult.propTypes = {};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}