{"version":3,"file":"static/webpack/static/development/pages/_app.js.c1a3fe06d9f7841a88a9.hot-update.js","sources":["webpack:///./utils/apollo.js"],"sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport withApollo from 'next-with-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\n\n// Update the GraphQL endpoint to any instance of GraphQL that you like\nconst GRAPHQL_URL = 'https://eu1.prisma.sh/meatapp/meatapp_service/dev';\n\nconst link = createHttpLink({\n\tfetch, // Switches between unfetch & node-fetch for client & server.\n\turi: GRAPHQL_URL,\n});\n\n// Export a HOC from next-with-apollo\n// Docs: https://www.npmjs.com/package/next-with-apollo\nexport default withApollo(\n\t// You can get headers and ctx (context) from the callback params\n\t// e.g. ({ headers, ctx, initialState })\n\t({ initialState }) =>\n\t\tnew ApolloClient({\n\t\t\tlink,\n\t\t\tcache: new InMemoryCache()\n\t\t\t\t//  rehydrate the cache using the initial data passed from the server:\n\t\t\t\t.restore(initialState || {}),\n\t\t})\n);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AADA;;;;A","sourceRoot":""}